# Generated by Django 5.2.4 on 2025-07-23 03:45

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clinicas", "0006_alter_clinica_telefone_clinica"),
        ("pacientes", "0003_alter_paciente_id"),
        ("processos", "0004_alter_processo_unique_together"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DailyMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("total_users", models.IntegerField(default=0)),
                ("new_users", models.IntegerField(default=0)),
                ("active_users", models.IntegerField(default=0)),
                ("total_logins", models.IntegerField(default=0)),
                ("failed_logins", models.IntegerField(default=0)),
                ("pdfs_generated", models.IntegerField(default=0)),
                ("pdf_errors", models.IntegerField(default=0)),
                (
                    "avg_pdf_generation_time_ms",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "total_pdf_size_mb",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("total_patients", models.IntegerField(default=0)),
                ("new_patients", models.IntegerField(default=0)),
                ("total_processes", models.IntegerField(default=0)),
                ("new_processes", models.IntegerField(default=0)),
                (
                    "database_size_mb",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("backup_success", models.BooleanField(null=True)),
                ("error_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "analytics_daily_metrics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="SystemHealthLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("database_query", "Database Query Performance"),
                            ("pdf_memory", "PDF Memory Usage"),
                            ("api_response", "API Response Time"),
                            ("backup_status", "Backup Status"),
                            ("error_rate", "Error Rate"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=12)),
                ("unit", models.CharField(max_length=20)),
                ("details", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "analytics_system_health_log",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["metric_type", "-timestamp"],
                        name="analytics_s_metric__5afe14_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="analytics_s_timesta_39280b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ClinicMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("active_doctors", models.IntegerField(default=0)),
                ("pdfs_generated", models.IntegerField(default=0)),
                ("unique_patients", models.IntegerField(default=0)),
                ("new_processes", models.IntegerField(default=0)),
                (
                    "clinic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="clinicas.clinica",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_clinic_metrics",
                "indexes": [
                    models.Index(
                        fields=["clinic", "-date"],
                        name="analytics_c_clinic__ecf4a0_idx",
                    ),
                    models.Index(fields=["date"], name="analytics_c_date_0f3039_idx"),
                ],
                "unique_together": {("clinic", "date")},
            },
        ),
        migrations.CreateModel(
            name="DiseaseMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("process_count", models.IntegerField(default=0)),
                ("pdf_count", models.IntegerField(default=0)),
                ("unique_patients", models.IntegerField(default=0)),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="processos.doenca",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_disease_metrics",
                "indexes": [
                    models.Index(
                        fields=["disease", "-date"],
                        name="analytics_d_disease_eb49a4_idx",
                    ),
                    models.Index(fields=["date"], name="analytics_d_date_7a92aa_idx"),
                ],
                "unique_together": {("disease", "date")},
            },
        ),
        migrations.CreateModel(
            name="MedicationUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("prescription_count", models.IntegerField(default=0)),
                ("unique_patients", models.IntegerField(default=0)),
                (
                    "disease",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="processos.doenca",
                    ),
                ),
                (
                    "medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_metrics",
                        to="processos.medicamento",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_medication_usage",
                "indexes": [
                    models.Index(
                        fields=["medication", "-date"],
                        name="analytics_m_medicat_221524_idx",
                    ),
                    models.Index(fields=["date"], name="analytics_m_date_ab4f5b_idx"),
                ],
                "unique_together": {("medication", "disease", "date")},
            },
        ),
        migrations.CreateModel(
            name="PDFGenerationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "generated_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("generation_time_ms", models.IntegerField(blank=True, null=True)),
                ("file_size_bytes", models.IntegerField(blank=True, null=True)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "pdf_type",
                    models.CharField(
                        choices=[
                            ("prescription", "Prescrição"),
                            ("protocol", "Protocolo"),
                            ("renewal", "Renovação"),
                            ("other", "Outro"),
                        ],
                        default="prescription",
                        max_length=50,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "clinica",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="clinicas.clinica",
                    ),
                ),
                (
                    "doenca",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="processos.doenca",
                    ),
                ),
                (
                    "paciente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pacientes.paciente",
                    ),
                ),
                (
                    "processo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="processos.processo",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdf_generations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_pdf_generation_log",
                "ordering": ["-generated_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-generated_at"],
                        name="analytics_p_user_id_a8b356_idx",
                    ),
                    models.Index(
                        fields=["generated_at"], name="analytics_p_generat_bf4858_idx"
                    ),
                    models.Index(
                        fields=["doenca"], name="analytics_p_doenca__8ad132_idx"
                    ),
                    models.Index(
                        fields=["clinica"], name="analytics_p_clinica_e6745c_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("signup", "Cadastro"),
                            ("password_reset", "Reset de Senha"),
                            ("profile_update", "Atualização de Perfil"),
                            ("failed_login", "Tentativa de Login Falha"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("extra_data", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_user_activity_log",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "-timestamp"],
                        name="analytics_u_user_id_f9a0e8_idx",
                    ),
                    models.Index(
                        fields=["activity_type", "-timestamp"],
                        name="analytics_u_activit_3ef357_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="analytics_u_timesta_5ac926_idx"
                    ),
                ],
            },
        ),
    ]
