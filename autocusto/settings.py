"""
Django settings for autocusto project.
Generated by 'django-admin startproject' using Django 2.2.6.
For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "4(=4rbnajm+=ce3)99i9r8t3jqucv@hc(a&pum25qnc)ff@51x"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "localhost",
    "0.0.0.0",
    "127.0.0.1",
    "autocusto.com.br",
    "www.autocusto.com.br",
]

# SERVER CHOICE

SERVER = os.environ.get("SERVER")

# Application definition

INSTALLED_APPS = [
    "processos.apps.ProcessosConfig",
    "medicos.apps.MedicosConfig",
    "clinicas.apps.ClinicasConfig",
    "pacientes.apps.PacientesConfig",
    "usuarios.apps.UsuariosConfig",
    "crispy_forms",
    "crispy_bootstrap4",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "autocusto.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "autocusto.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

print(os.environ.get("SQL_HOST"))

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "autocusto",
        "USER": "lucas",
        "PASSWORD": "rraptnor",
        "HOST": "db",
        "PORT": "5432",
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = "usuarios.Usuario"

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'autocusto.validation.CustomMinimumLengthValidator',
    },
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/


STATIC_URL = "/static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# if SERVER == 'dev':
#     STATICFILES_DIRS.append(os.path.join(BASE_DIR, 'static'))
# else:

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# print(STATICFILES_DIRS, 'AQUI')

# Configurações do Crispy
CRISPY_TEMPLATE_PACK = "bootstrap4"

# Django Messages - Map message tags to Bootstrap classes
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',  # Maps 'error' to 'danger' for Bootstrap
    messages.DEBUG: 'info',
}

# Login
LOGIN_REDIRECT_URL = "home"
LOGIN_URL = "login"

# PDFs

PATH_LME_BASE = os.path.join(
    BASE_DIR, "processos/static/processos", "lme_base_modelo.pdf"
)
PATH_RELATORIO = os.path.join(
    BASE_DIR, "processos/static/processos", "relatorio_modelo.pdf"
)
PATH_EXAMES = os.path.join(BASE_DIR, "processos/static/processos", "sadt.pdf")
PATH_PDF_DIR = os.path.join(BASE_DIR, "processos/static/protocolos")

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
